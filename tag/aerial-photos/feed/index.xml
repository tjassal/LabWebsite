<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	>

<channel>
	<title>aerial photos &#8211; The Biogoegraphy &amp; Landscape Dynamics Lab</title>
	<atom:link href="https://tjassal.github.io/LabWebsite/tag/aerial-photos/feed/" rel="self" type="application/rss+xml" />
	<link>https://tjassal.github.io/LabWebsite/</link>
	<description>Research focused on biogeography, spatial ecology and landscape change at Kent State University</description>
	<lastBuildDate>Wed, 31 Dec 2014 18:20:40 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.2</generator>
<site xmlns="com-wordpress:feed-additions:1">77891341</site>	<item>
		<title>A Brief Foray into Google Earth Engine: Calculate NDVI from the Cloud</title>
		<link>https://tjassal.github.io/LabWebsite/2018/01/09/a-brief-foray-into-google-earth-engine-calculate-ndvi-from-the-cloud/</link>
				<comments>https://tjassal.github.io/LabWebsite/2018/01/09/a-brief-foray-into-google-earth-engine-calculate-ndvi-from-the-cloud/#respond</comments>
				<pubDate>Wed, 10 Jan 2018 00:41:11 +0000</pubDate>
		<dc:creator><![CDATA[tim.assal@gmail.com]]></dc:creator>
				<category><![CDATA[Blog-lite]]></category>
		<category><![CDATA[aerial photos]]></category>
		<category><![CDATA[Cal Poly University]]></category>
		<category><![CDATA[California]]></category>
		<category><![CDATA[Cloud computing]]></category>
		<category><![CDATA[color-infrared]]></category>
		<category><![CDATA[Google Earth Engine]]></category>
		<category><![CDATA[JavaScript]]></category>
		<category><![CDATA[NDVI time series]]></category>
		<category><![CDATA[Open Science]]></category>
		<category><![CDATA[Raster]]></category>
		<category><![CDATA[remote sensing]]></category>
		<category><![CDATA[San Luis Obispo]]></category>
		<category><![CDATA[science communication]]></category>
		<category><![CDATA[spatial ecology]]></category>

		<guid isPermaLink="false">https://tjassal.github.io/LabWebsite/?p=1659</guid>
				<description><![CDATA[Google Earth Engine (GEE) is a cloud-based platform for planetary-scale environmental data analysis which uses a JavaScript API and an online IDE code editor. In short, you can utilize remotely sensed imagery available in Google&#8217;s cloud to run analyses without downloading the data to your local machine. You&#8217;ll need to sign up as a developer &#8230; <a href="https://tjassal.github.io/LabWebsite/2018/01/09/a-brief-foray-into-google-earth-engine-calculate-ndvi-from-the-cloud/" class="more-link">Continue reading <span class="screen-reader-text">A Brief Foray into Google Earth Engine: Calculate NDVI from the Cloud</span> <span class="meta-nav">&#8594;</span></a>]]></description>
								<content:encoded><![CDATA[<p><a href="https://developers.google.com/earth-engine/" target="_blank" rel="noopener">Google Earth Engine</a> (GEE) is a cloud-based platform for planetary-scale environmental data analysis which uses a JavaScript API and an online IDE code editor. In short, you can utilize remotely sensed imagery available in Google&#8217;s cloud to run analyses without downloading the data to your local machine. You&#8217;ll need to sign up as a developer to gain access <a href="https://signup.earthengine.google.com/#!/" target="_blank" rel="noopener">here.</a></p>
<p>Below is an example from an upcoming lecture to the Anthropology and Geography group of the <a href="https://socialsciences.calpoly.edu/" target="_blank" rel="noopener">Social Sciences Department</a> at Cal Poly University. In my talk I showed an example of the Normalized Difference Vegetation Index for Cal Poly&#8217;s campus. Here I&#8217;ll demonstrate the workflow I used to create NDVI using GEE with data from the cloud.</p>
<p>To execute the example below, please download the campus shapefile <a href="https://tjassal.github.io/LabWebsite/wp-content/uploads/2018/01/CalPoly_campus.zip" target="_blank" rel="noopener">here</a> (originally obtained from the <a href="https://afd.calpoly.edu/facilities/mapsplans/cadfiles/map/gis/" target="_blank" rel="noopener">campus website</a>). You&#8217;ll need to upload the shapefile into GEE using these <a href="https://developers.google.com/earth-engine/importing" target="_blank" rel="noopener">instructions</a> (see the &#8220;Uploading table assets&#8221; section) and load the data into your script using these <a href="https://developers.google.com/earth-engine/asset_manager#importing-assets-to-your-script" target="_blank" rel="noopener">instructions</a> (see the &#8220;Importing assets to your script&#8221; section). If you&#8217;d like to run the example without downloading campus data, skip to the second code block below.</p>
<p>Copy and paste the following code into the Code Editor of GEE:</p><pre class="crayon-plain-tag">// Load four 2016 NAIP quarter quads, different locations.
var naip2016 = ee.ImageCollection('USDA/NAIP/DOQQ')
  .filterBounds(ee.Geometry.Rectangle(-120.73857, 35.36587, -120.61841, 35.25408))
  .filterDate('2016-01-01', '2016-12-31');

// Spatially mosaic the images in the collection and display.
var mosaic = naip2016.mosaic();

// Get information about the bands as a list; prints in console at right
var bandNames = mosaic.bandNames();
print('Band names: ', bandNames); 

//Get the projection of Band 1
var b1proj = mosaic.select('B').projection();
print ('Band 1 projection: ', b1proj);

//set map center to Baker Lawn on CP's campus
Map.setCenter(-120.65995, 35.9103, 12);
//display natural color
Map.addLayer(mosaic, {bands: ['R', 'G', 'B']}, 'NAIP DOQQ'); 
//display false color IR
//Map.addLayer(mosaic, {bands: ['N', 'R', 'G']}, 'NAIP DOQQ');  

// Caculate NDVI.
var ndvi = mosaic.normalizedDifference(['N', 'R']);

// Display the result using a color ramp: dark red, red, orange, yellow, lime, green, dark green
var ndviParams = {min: -1, max: 1, palette: ['8B0000','FF0000', 'FF4500', 'FFFF00', '00FF00','008000', '006400']};

// Clip NDVI to campus boundary and add to map
Map.setCenter(-120.65995, 35.31203, 13);
Map.addLayer(ndvi.clip(table), ndviParams);

//Display the outline of campus as a black line, no fill
// Create an empty image into which to paint the features, cast to byte.
var empty = ee.Image().byte();

// Paint all the polygon edges with the same number and width, display.
var outline = empty.paint({
  featureCollection: table,
  color: 1,
  width: 1
});
Map.addLayer(outline, {palette: '000000'}, 'edges');</pre><p><figure id="attachment_1689" aria-describedby="caption-attachment-1689" style="width: 474px" class="wp-caption aligncenter"><a href="https://i0.wp.com/www.timassal.com/wp-content/uploads/2018/01/NDVI_CalPoly_whbck.jpg" target="_blank" rel="noopener"><img class="wp-image-1689 size-large" src="https://i0.wp.com/www.timassal.com/wp-content/uploads/2018/01/NDVI_CalPoly_whbck.jpg?resize=474%2C383" alt="" width="474" height="383" srcset="https://i0.wp.com/www.timassal.com/wp-content/uploads/2018/01/NDVI_CalPoly_whbck.jpg?resize=1024%2C828&amp;ssl=1 1024w, https://i0.wp.com/www.timassal.com/wp-content/uploads/2018/01/NDVI_CalPoly_whbck.jpg?resize=300%2C243&amp;ssl=1 300w, https://i0.wp.com/www.timassal.com/wp-content/uploads/2018/01/NDVI_CalPoly_whbck.jpg?resize=768%2C621&amp;ssl=1 768w, https://i0.wp.com/www.timassal.com/wp-content/uploads/2018/01/NDVI_CalPoly_whbck.jpg?w=1119&amp;ssl=1 1119w, https://i0.wp.com/www.timassal.com/wp-content/uploads/2018/01/NDVI_CalPoly_whbck.jpg?w=948 948w" sizes="(max-width: 474px) 100vw, 474px" data-recalc-dims="1" /></a><figcaption id="caption-attachment-1689" class="wp-caption-text">NDVI derived from color-infrared aerial photos for Cal Poly&#8217;s campus. The code block above will produce this image in Google Earth Engine. Dark green pixels indicate high values of NDVI; orange/red pixels indicate low values; grey pixels indicate a mask (values below -0.25).</figcaption></figure></p>
<p>The code below does not require download of any campus data; however, it will calculate NDVI over the entire extent as opposed to the campus extent in the example above. Copy and paste the following code into the Code Editor of GEE:</p><pre class="crayon-plain-tag">// Load four 2016 NAIP quarter quads, different locations.
var naip2016 = ee.ImageCollection('USDA/NAIP/DOQQ')
  .filterBounds(ee.Geometry.Rectangle(-120.73857, 35.36587, -120.61841, 35.25408))
  .filterDate('2016-01-01', '2016-12-31');

// Spatially mosaic the images in the collection and display.
var mosaic = naip2016.mosaic();

// Get information about the bands as a list; prints in console at right
var bandNames = mosaic.bandNames();
print('Band names: ', bandNames); 

//Get the projection of Band 1
var b1proj = mosaic.select('B').projection();
print ('Band 1 projection: ', b1proj);

//set map center to Baker Lawn on CP's campus
Map.setCenter(-120.65995, 35.9103, 12);
//display natural color
Map.addLayer(mosaic, {bands: ['R', 'G', 'B']}, 'NAIP DOQQ'); 
//display false color IR

// Caculate NDVI.
var ndvi = mosaic.normalizedDifference(['N', 'R']);

// Display the result using a color ramp: dark red, red, orange, yellow, lime, green, dark green
var ndviParams = {min: -1, max: 1, palette: ['8B0000','FF0000', 'FF4500', 'FFFF00', '00FF00','008000', '006400']};
//Map.addLayer(ndvi, ndviParams, 'NDVI image');

// Add NDVI to map
Map.setCenter(-120.65995, 35.31203, 13);
Map.addLayer(ndvi, ndviParams);</pre><p>&nbsp;</p>
<p>&nbsp;</p>
]]></content:encoded>
							<wfw:commentRss>https://tjassal.github.io/LabWebsite/2018/01/09/a-brief-foray-into-google-earth-engine-calculate-ndvi-from-the-cloud/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">1659</post-id>	</item>
		<item>
		<title>Bing&#8217;s Global Ortho Project &#8211; an impressive imagery resource</title>
		<link>https://tjassal.github.io/LabWebsite/2012/10/05/bing-imagery-an-impressive-resource/</link>
				<comments>https://tjassal.github.io/LabWebsite/2012/10/05/bing-imagery-an-impressive-resource/#respond</comments>
				<pubDate>Fri, 05 Oct 2012 22:37:11 +0000</pubDate>
		<dc:creator><![CDATA[tim.assal@gmail.com]]></dc:creator>
				<category><![CDATA[Blog-lite]]></category>
		<category><![CDATA[aerial photos]]></category>
		<category><![CDATA[Bing Imagery]]></category>
		<category><![CDATA[Global Ortho project]]></category>
		<category><![CDATA[NAIP imagery]]></category>
		<category><![CDATA[remote sensing]]></category>

		<guid isPermaLink="false">http://biogeographia.wordpress.com/?p=281</guid>
				<description><![CDATA[A friend of mine recently turned me on to Bing Imagery (thanks Doug!) and I was really impressed. If you haven&#8217;t seen it yet it&#8217;s well worth a look: Bing has now completed their Global Ortho project (accessed through Bing&#8217;s map search engine). The archive covers the Continental United States and Western Europe at 30 &#8230; <a href="https://tjassal.github.io/LabWebsite/2012/10/05/bing-imagery-an-impressive-resource/" class="more-link">Continue reading <span class="screen-reader-text">Bing&#8217;s Global Ortho Project &#8211; an impressive imagery resource</span> <span class="meta-nav">&#8594;</span></a>]]></description>
								<content:encoded><![CDATA[<p>A friend of mine recently turned me on to Bing Imagery (thanks Doug!) and I was really impressed. If you haven&#8217;t seen it yet it&#8217;s well worth a look:</p>
<figure id="attachment_283" aria-describedby="caption-attachment-283" style="width: 474px" class="wp-caption aligncenter"><a href="https://i1.wp.com/www.timassal.com/wp-content/uploads/2012/10/naip_bing1.jpg"><img class="size-large wp-image-283" src="https://i1.wp.com/www.timassal.com/wp-content/uploads/2012/10/naip_bing1.jpg?resize=474%2C329" alt="A 200 m^2 watering hole near one of my field sites in Wyoming. Cattle trails and the beasts themselves can be seen in both images, but clearly identified in the Bing imagery. Left: NAIP imagery (1 m resolution). Right: BING imagery (30 cm resolution)." width="474" height="329" srcset="https://i1.wp.com/www.timassal.com/wp-content/uploads/2012/10/naip_bing1.jpg?resize=1024%2C711&amp;ssl=1 1024w, https://i1.wp.com/www.timassal.com/wp-content/uploads/2012/10/naip_bing1.jpg?resize=300%2C208&amp;ssl=1 300w, https://i1.wp.com/www.timassal.com/wp-content/uploads/2012/10/naip_bing1.jpg?w=948 948w, https://i1.wp.com/www.timassal.com/wp-content/uploads/2012/10/naip_bing1.jpg?w=1422 1422w" sizes="(max-width: 474px) 100vw, 474px" data-recalc-dims="1" /></a><figcaption id="caption-attachment-283" class="wp-caption-text">A 200 m^2 watering hole near one of my field sites in Wyoming. Cattle trails and the beasts themselves can be seen in both images, but clearly identified in the Bing imagery. Left: NAIP imagery (1 m resolution). Right: BING imagery (30 cm resolution).</figcaption></figure>
<p>Bing has now completed their Global Ortho project (accessed through Bing&#8217;s map search engine). The archive covers the Continental United States and Western Europe at 30 cm resolution. However other areas of the globe have excellent coverage as well. I&#8217;m not sure of the resolution, but it appears to have been collected at a finer scale than that of Google Earth. It is difficult to determine the date of the imagery. However, Martijn van Exel has a great <a href="https://oegeo.wordpress.com/2010/12/03/bing-aerial-photos-for-openstreetmap-great-but-are-they-recent/comment-page-1/#comment-1499" target="_blank">post</a> about this on his blog and he developed an interface through openstreetmap to determine imagery acquisition date. Unfortunately it only provides a range of imagery acquisition dates, but better than no date at all.  Check out <a href="http://mvexel.dev.openstreetmap.org/bing/" target="_blank">http://mvexel.dev.openstreetmap.org/bing/</a> (zoom in on your area of interest pretty tight).</p>
<p>The imagery can only be viewed as a basemap in ArcGIS (to my knowledge). To add to an mxd: File/Add Data/Add Basemap/&#8221;Bing Maps Aerial&#8221;</p>
]]></content:encoded>
							<wfw:commentRss>https://tjassal.github.io/LabWebsite/2012/10/05/bing-imagery-an-impressive-resource/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">281</post-id>	</item>
	</channel>
</rss>
